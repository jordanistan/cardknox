name: SBOM Scan and Report

on:
  push:
    branches:
      - main

jobs:
  generate-sbom:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Generate SBOM
        id: generate-sbom
        run: |
          # Use CycloneDX to generate the SBOM
          sbom-generator --output sbom.json
          echo "::set-output name=sbom-filepath::sbom.json"

  scan-vulnerabilities:
    needs: generate-sbom
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Scan for vulnerabilities
        # Use Trivy for vulnerability scanning
        run: |
          sbom="$INPUT_SBOM"
          echo "Scanning for vulnerabilities in $sbom"
          trivy --format json --output trivy_report.json "$sbom"
          echo "::set-output name=vulnerability-report::trivy_report.json"

  generate-pdf-report:
    needs: scan-vulnerabilities
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Generate PDF report
        # Use pandoc to convert the vulnerability scan report to PDF
        run: |
          echo "Generating PDF report"
          pandoc -s -o vulnerabilities_report.pdf trivy_report.json
          echo "PDF report generated"

  upload-artifact:
    needs: generate-pdf-report
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Upload PDF report as artifact
        uses: actions/upload-artifact@v2
        with:
          name: sbom-vulnerabilities-report
          path: vulnerabilities_report.pdf
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  clean-up:
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Remove artifact after 60 days
        run: |
          find ${{ github.workspace }} -type f -name "vulnerabilities_report.pdf" -mtime +60 -delete
